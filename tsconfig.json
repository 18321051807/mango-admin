{
  "compilerOptions": {
    "target": "ESNext", // 指定ECMAScript目标版本
    "module": "ESNext", // 指定生成哪个模块系统代码
    /*  Bundler mode | 编译相关 */
    "moduleResolution": "Node", // 模块解析（查找）策略
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true, // 防止 ts文件中引入json文件，会报如下红色波浪线
    "isolatedModules": true, // 是否将没有 import/export 的文件视为旧（全局而非模块化）脚本文件
    "noEmit": true, // 编译时不生成任何文件（只进行类型检查）
    "jsx": "react-jsx", // 指定将 JSX 编译成什么形式
    "removeComments": true,
    "useUnknownInCatchVariables": false, //是否允许在 catch 语句中使用 unknown 类型的变量。
    "declarationMap": false, //是否为每个生成的 .d.ts 文件生成源映射。
    "inlineSources": false, //是否将源文件的内容嵌入到源映射中。
    "skipLibCheck": true, //跳过所有的 *.d.ts 文件的类型检查。
    "esModuleInterop": false, // es 模块互操作，屏蔽 ESModule和CommonJS之间的差异
    "preserveWatchOutput": true, //在 TypeScript 的观察模式下保留控制台输出。
    "experimentalDecorators": true, //启用对装饰器的实验性支持。
    "noLib": false, //不排除默认库文件（比如 lib.d.ts）的类型检查。
    "allowSyntheticDefaultImports": true, // 允许通过import x from 'y' 即使模块没有显式指定 default 导出
    "jsxImportSource": "vue",
    "allowJs": true, // 允许 ts 编译器编译 js 文件
    /* Linting | 代码质量相关 */
    "strict": true, //true => 同时开启 alwaysStrict, noImplicitAny, noImplicitThis 和 strictNullChecks
    "useDefineForClassFields": true, //此标志用作迁移到即将推出的类字段标准版本的一部分
    "noImplicitOverride": true,
    "noUnusedLocals": false,
    "forceConsistentCasingInFileNames": true, // 对文件名称强制区分大小写
    "noUnusedParameters": false,
    "strictFunctionTypes": false,
    "noImplicitAny": false,
    "lib": [
      "ESNext",
      "DOM"
    ], //用于指定需要包含的模块，只有在这里列出的模块的声明文件才会被加载
    //解析非相对模块名的基准目录，配置paths前先配置baseUrl
    "baseUrl": ".",
    // 模块名到基于 baseUrl的路径映射的列表
    "paths": {
      "@/*": [
        "src/*"
      ],
      "@build/*": [
        "build/*"
      ],
      "#/*": [
        "types/*"
      ]
    },
    "types": [
      "node",
      "vite/client",
    ]
  },
  "include": [
    "mock/*.ts",
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "src/**/*.d.ts",
    "types/*.d.ts",
    "types/**/*.d.ts",
    "types/**/*.ts",
    "tests/**/*.ts",
    "build/**/*.ts",
    "build/**/*.d.ts",
    "mock/**/*.ts",
    "vite.config.ts"
  ],
  "exclude": [
    "dist",
    "**/*.js",
    "node_modules"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}